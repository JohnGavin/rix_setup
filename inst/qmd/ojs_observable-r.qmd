---
params:
    source_url: "https://nrennie.rbind.io/blog/observable-r-users/"
execute:
  echo: false
---


```{r library}
library(targets)
library(here)
library(dplyr)
# tar_config_set(store = here::here("_targets"))
```
# data
```{r tar_load}
tar_load(tuesdata)
tar_load(exped_tidy)
tar_load(peaks_tidy)
peaks_tidy
```
```{r plot_data}
tar_load(plot_data)
```
```{r ojs_define}
ojs_define(r_data = plot_data)
```
# ojs
```{ojs transpose}
data = transpose(r_data)
```
```{ojs d3@7}
// access functions from D3
d3 = require("d3@7")
```
```{ojs}
Plot.plot({
  marks: [
    Plot.dot(data, {x: "PYEAR", y: "HEIGHTM"})
  ]
})
```
```{ojs}
dataTyped = data.map(({ PYEAR, HEIGHTM, REGION_FACTOR }) => ({
  PYEAR: new Date(PYEAR, 0, 1),
  HEIGHTM,
  REGION_FACTOR
}))
```
```{ojs}
Plot.plot({
  // Draw points
  marks: [
    Plot.dot(dataTyped, {x: "PYEAR", y: "HEIGHTM", fill: "REGION_FACTOR"})
  ],
  // Colours
  color: {legend: true, scheme: "set2"},
  // Grid and axes styling
  grid: true,
  x: {label: "Year of the first recorded climbing attempt on the peak"},
  y: {label: "Peak height (m)"}
})
```
```{ojs}
Plot.plot({
  // Draw points
  marks: [
    Plot.dot(dataTyped, {x: "PYEAR", y: "HEIGHTM", fill: "REGION_FACTOR"})
  ],
  // Colours
  color: {legend: true, scheme: "set2"},
  // Grid and axes styling
  grid: true,
  x: {label: "Year of the first recorded climbing attempt on the peak"},
  y: {label: "Peak height (m)"},
  // Text
  title: "The History of Himalayan Expeditions",
  subtitle: "For peaks in the Himalayas that have been climbed, this chart shows the year of the first recorded climb and the height of the peak.",
  caption: "Data: The Himalayan Database (2017)",
  // Size
  height: 400,
  width: 800,
  marginLeft: 50,
  marginRight: 50
})
```


# gh pages
```{r gh pages, eval = FALSE}
# source
src_fld <- file.path("inst", "qmd")
fn <- "ojs_observable-r"
qmd_file <- here(src_fld, paste0(fn, ".qmd"))

# GENERATED HTML
# If next to source => Needs moving
html_file <- here(src_fld, paste0(fn, ".html"))
html_fldr <- here(src_fld, paste0(fn, "_files"))

# does target directory for HTML exist
html_dir <- dirname(html_file)
if (!dir.exists(html_dir)) {
  dir.create(html_dir, recursive = TRUE)
  message("Created directory: ", html_dir)
}

# 2. Define Git variables
commit_message <- "From R to OJS then plot"
branch_name <- "main" # Or "master", or your default branch

# --- Git Commands ---

# 3. Check Git status (Optional, but good practice)
message("--- Git Status ---")
system("git status")

# 4. Stage the files
#    Use shQuote() to handle potential spaces or special characters in paths
message("\n--- Staging Files ---")
system(paste("git add", shQuote(qmd_file)))
system(paste("git add", shQuote(html_fldr)))
system(paste("git add", shQuote(html_file)))

fld_docs <- here("docs")
if (!dir.exists(fld_docs)) {
  dir.create(fld_docs, overwrite = T)
}
file.create(here(fld_docs, ".nojekyll"))

file.copy(html_file, fld_docs, overwrite = T) |>
  stopifnot("failed to copy to ./docs/" = _)
system(paste("git add", shQuote(fld_docs)))
# git rm default_sym.R
# git push origin main # Or your default branch name

# Add any other related files if necessary (e.g., figures, data files committed)
# system("git add path/to/other/file")

# 5. Commit the changes
message("\n--- Committing Files ---")
system(paste("git commit -m", shQuote(commit_message)))

# 6. Push to GitHub
message("\n--- Pushing to GitHub ---")
system(paste("git push origin", branch_name))

message("\n--- Script Finished ---")

browseURL("https://johngavin.github.io/rix_setup/ojs_observable-r.html")
```
